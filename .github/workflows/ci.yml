name: CI

on:
  push:
    branches: [ "feature/*" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restaurar dependências
        run: dotnet restore MecanicaOS.sln

      - name: Compilar o projeto
        run: dotnet build MecanicaOS.sln --no-restore

      - name: Executar testes unitários
        run: |
          chmod +x .github/scripts/check_test_success.sh
          .github/scripts/check_test_success.sh

      - name: Construir imagem Docker para validação
        run: docker build . --file Dockerfile --tag mecanica-os-api:latest

  create-pr:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Criar Pull Request para a release mais recente
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git fetch --all

          LATEST_RELEASE_BRANCH=$(git branch -r | grep 'origin/release/' | sed 's|origin/||' | sort -V | tail -n 1)

          if [ -z "$LATEST_RELEASE_BRANCH" ]; then
            echo "::error::Nenhuma branch 'release/*' encontrada. Por favor, crie uma branch de release (ex: release/1.0) para continuar."
            exit 1
          fi

          echo "A branch de release mais recente encontrada é: $LATEST_RELEASE_BRANCH"

          # Verifica se existem commits de diferença entre a feature e a release
          COMMIT_COUNT=$(git rev-list --count HEAD ^origin/$LATEST_RELEASE_BRANCH)

          if [ "$COMMIT_COUNT" -eq "0" ]; then
            echo "✅ Nenhum commit novo encontrado na branch ${{ github.ref_name }} em comparação com $LATEST_RELEASE_BRANCH. Nenhuma ação necessária."
            exit 0
          fi

          echo "$COMMIT_COUNT commits novos encontrados. Verificando se um PR já existe..."

          # Verifica se já existe um PR aberto
          OPEN_PR_COUNT=$(gh pr list --state open --head ${{ github.ref_name }} --base $LATEST_RELEASE_BRANCH --json number | jq 'length')
          if [ "$OPEN_PR_COUNT" -eq "0" ]; then
            echo "Nenhum Pull Request aberto encontrado para a branch $LATEST_RELEASE_BRANCH. Criando um novo."
            gh pr create \
              --base $LATEST_RELEASE_BRANCH \
              --title "PR da feature: ${{ github.ref_name }}" \
              --body "Este Pull Request foi gerado automaticamente pela nossa pipeline de CI. Por favor, revise as alterações."
          else
            echo "Um Pull Request aberto já existe para a branch $LATEST_RELEASE_BRANCH. Nenhuma ação será tomada."
          fi
