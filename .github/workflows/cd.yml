name: CD

on:
  push:
    branches: [ "Main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore MecanicaOS.sln

      - name: Build
        run: dotnet build MecanicaOS.sln --no-restore

      - name: Test
        run: dotnet test MecanicaOS.sln --no-build --verbosity normal

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get_sha.outputs.sha }}
      owner_lowercase: ${{ steps.convert_owner.outputs.name }}
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Obter o SHA do commit
        id: get_sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Converter nome do repositório para minúsculas
        id: convert_owner
        run: echo "name=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Construir e enviar a imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.convert_owner.outputs.name }}/mecanicaos-api:${{ steps.get_sha.outputs.sha }}
            ghcr.io/${{ steps.convert_owner.outputs.name }}/mecanicaos-api:latest

  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: 'Como configurar o KUBE_CONFIG_DATA'
        run: |
          echo "################################################################################################"
          echo "ATENÇÃO: Para este passo funcionar, você precisa configurar o segredo 'KUBE_CONFIG_DATA' no seu repositório."
          echo "1. No seu ambiente local, onde o 'kubectl' está funcionando, execute o comando:"
          echo "   cat ~/.kube/config"
          echo "2. Copie TODO o conteúdo do arquivo."
          echo "3. No seu repositório GitHub, vá para 'Settings' > 'Secrets and variables' > 'Actions'."
          echo "4. Clique em 'New repository secret'."
          echo "5. Dê o nome 'KUBE_CONFIG_DATA' e cole o conteúdo do seu arquivo de configuração no campo 'Secret'."
          echo "################################################################################################"

      - name: Configurar o kubectl
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Atualizar a tag da imagem no manifesto de deploy
        run: |
          echo "A nova tag da imagem é: ${{ needs.build-and-push.outputs.image_tag }}"
          sed -i "s|image:.*|image: ghcr.io/${{ needs.build-and-push.outputs.owner_lowercase }}/mecanicaos-api:${{ needs.build-and-push.outputs.image_tag }}|g" k8s/api-deployment.yaml
          echo "Manifesto de deploy da API atualizado:"
          cat k8s/api-deployment.yaml

      - name: Aplicar todos os manifestos K8s
        run: |
          echo "Aplicando todos os manifestos da pasta k8s..."
          kubectl apply -f k8s/

      - name: Verificar o status do deploy
        run: |
          echo "Aguardando o deploy da API ser finalizado..."
          kubectl rollout status deployment/mecanicaos-api
          echo "Verificando os recursos criados..."
          kubectl get all
