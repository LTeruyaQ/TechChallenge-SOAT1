name: CD

on:
  push:
    branches: [ "Main" ]
  pull_request:
    branches: [ "Main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get_sha.outputs.sha }}
      owner_lowercase: ${{ steps.convert_owner.outputs.name }}
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Obter o SHA do commit
        id: get_sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Converter nome do repositório para minúsculas
        id: convert_owner
        run: echo "name=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Construir e enviar a imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.convert_owner.outputs.name }}/mecanicaos-api:${{ steps.get_sha.outputs.sha }}
            ghcr.io/${{ steps.convert_owner.outputs.name }}/mecanicaos-api:latest

  validate-k8s-manifests:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Atualizar a tag da imagem no manifesto de deploy
        run: |
          echo "A nova tag da imagem é: ${{ needs.build-and-push.outputs.image_tag }}"
          sed -i "s|image:.*|image: ghcr.io/${{ needs.build-and-push.outputs.owner_lowercase }}/mecanicaos-api:${{ needs.build-and-push.outputs.image_tag }}|g" k8s/api-deployment.yaml
          echo "Manifesto de deploy da API atualizado:"
          cat k8s/api-deployment.yaml

      - name: Instalar e Validar com Kubeval
        run: |
          echo "Instalando Kubeval..."
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz -O kubeval.tar.gz
          tar xf kubeval.tar.gz
          sudo mv kubeval /usr/local/bin

          echo "Validando todos os manifestos da pasta k8s com Kubeval..."
          find k8s -name "*.yaml" | xargs kubeval --strict
