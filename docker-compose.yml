version: '3.8'

services:
  # Serviço da aplicação .NET
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mecanicaos-api
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=mecanicaos;Username=postgres;Password=postgres;Timeout=60;Command Timeout=60;Keepalive=60;Pooling=true;Minimum Pool Size=1;Maximum Pool Size=100;Connection Lifetime=300;
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
      echo 'Aguardando o banco de dados...' &&
      until PGPASSWORD=postgres psql -h db -U postgres -d mecanicaos -c 'SELECT 1' > /dev/null 2>&1; do
        echo 'Aguardando o PostgreSQL ficar disponível...';
        sleep 2;
      done &&
      echo 'Banco de dados disponível! Executando migrações...' &&
      dotnet ef database update --project /src/MecanicaOS/Infraestrutura/Infraestrutura.csproj --startup-project /src/MecanicaOS/API/API.csproj &&
      echo 'Iniciando a aplicação...' &&
      dotnet API.dll"

  # Serviço do banco de dados PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: mecanicaos-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: mecanicaos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mecanicaos"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Serviço do pgAdmin (opcional, para gerenciamento do banco de dados)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mecanicaos.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
